(defn conr[ col item ]
       (lazy-seq
               (if (seq col)
                       (cons (first col) (conr (rest col) item))
                       (list item))))


(defn find-next-permutation [lst]
  (let [my-lst (reverse lst)]
    (loop [left '()
	   first-elt (first my-lst)
	   second-elt (first (rest (my-lst)))
	   right (rest (rest my-lst))]
      (if (> first-elt second-elt) (reverse (flatten (list
						      left
						      first-elt
						      second-elt
						      right)))
	  (recur (conr left first-elt)
		 (second-elt)
		 (first right)
		 (rest right))))))